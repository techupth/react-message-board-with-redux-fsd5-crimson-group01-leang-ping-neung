// Import necessary functions from the @reduxjs/toolkit library
import { createSlice } from "@reduxjs/toolkit";

// Define the initial state for the message board
const initialState = {
  messageText: "", // Current input text
  messageTextArray: [], // Array to store submitted messages
};

// Create a Redux slice named "messageBoard" with initial state and reducers
export const messageBoardSlice = createSlice({
  name: "messageBoard", // Name of the slice
  initialState: initialState, // Initial state
  reducers: {
    // Reducer to set the messageText property in the state to the payload of the action
    createMessageText: (state, action) => {
      state.messageText = action.payload;
    },

    // Reducer to add the current messageText to the messageTextArray and reset messageText to an empty string
    addMessageText: (state) => {
      state.messageTextArray.push(state.messageText);
      state.messageText = ""; // Reset the input form to be empty after the user clicks the submit button
    },

    // Reducer to delete a message from messageTextArray based on the index provided in the action payload
    deleteMessageText: (state, action) => {
      state.messageTextArray.splice(action.payload, 1);
    },
  },
});

// Export individual actions for use in other parts of the application
export const { createMessageText, addMessageText, deleteMessageText } =
  messageBoardSlice.actions;

// Export the reducer generated by createSlice as the default export
export default messageBoardSlice.reducer;
